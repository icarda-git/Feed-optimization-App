name: .NET MAUI CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-android:
    name: Build Android APK
    runs-on: windows-latest  # âœ… Changed to Windows for MAUI compatibility

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Install MAUI Workload
        run: |
          dotnet workload install android ios maccatalyst wasm-tools maui
          dotnet workload restore  # âœ… Ensure workloads are restored
        working-directory: ./FeedOptimizationApp

      - name: Debug - List Files in Root
        run: Get-ChildItem -Path . -Recurse  # âœ… Debugging step to locate the solution file
        working-directory: ./FeedOptimizationApp

      - name: Debug - Confirm Solution File Exists
        run: |
          if (Test-Path "FeedOptimizationApp.sln") { echo "Solution found" } else { echo "Solution NOT found"; exit 1 }
        working-directory: ./FeedOptimizationApp

      - name: Verify MAUI Workload Installation
        run: dotnet workload list  # âœ… Ensure workloads are correctly installed
        working-directory: ./FeedOptimizationApp

      - name: Restore Dependencies
        run: dotnet restore --force FeedOptimizationApp.sln  # âœ… Ensure correct path
        working-directory: ./FeedOptimizationApp

      - name: Build Android App
        run: dotnet build FeedOptimizationApp.sln -f net8.0-android -c Release  # âœ… Ensure correct path
        working-directory: ./FeedOptimizationApp

      - name: Create Android APK
        run: |
          dotnet publish FeedOptimizationApp.sln -f net8.0-android -c Release -o ./publish
          move ./publish\*.apk ./publish/App.apk  # Rename output file
        working-directory: ./FeedOptimizationApp

      - name: Upload Android Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Android-APK
          path: ./FeedOptimizationApp/publish/App.apk

  deploy-android:
    name: Deploy to Google Play
    runs-on: windows-latest
    needs: build-android

    steps:
      - name: Download Android APK
        uses: actions/download-artifact@v3
        with:
          name: Android-APK
          path: ./FeedOptimizationApp/publish

      - name: Deploy to Google Play Store (Beta)
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: ${{ secrets.GOOGLE_PLAY_API_KEY }}
          packageName: "com.icarda.feedapp"
          releaseFiles: "./FeedOptimizationApp/publish/App.apk"
          track: beta
          status: completed

  notify-team:
    name: Notify Team
    runs-on: windows-latest
    needs: [deploy-android]

    steps:
      - name: Send Teams Notification
        run: |
          curl -H "Content-Type: application/json" \
               -d '{"text": "ðŸš€ New MAUI App build deployed to Google Play! ðŸŽ‰"}' \
               -X POST "https://outlook.office.com/webhook/YOUR_WEBHOOK_URL"

