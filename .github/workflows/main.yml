name: .NET MAUI CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-android:
    name: Build and Test Android APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Install MAUI Workload
        run: dotnet workload install maui

      - name: Restore Dependencies
        run: dotnet restore

      - name: Run Tests with Code Coverage
        run: dotnet test --collect:"XPlat Code Coverage" --logger trx --results-directory ./TestResults

      - name: Install ReportGenerator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool

      - name: Generate Code Coverage Report
        run: |
          reportgenerator -reports:./TestResults/*/coverage.cobertura.xml \
            -targetdir:./TestResults/CoverageReport \
            -reporttypes:Html

      - name: Upload Test and Coverage Reports
        uses: actions/upload-artifact@v4
        with:
          name: Code-Coverage-Report
          path: ./TestResults/CoverageReport

      - name: Build Android App
        run: dotnet build -f net8.0-android -c Release

      - name: Create Android APK
        run: |
          dotnet publish -f net8.0-android -c Release -o ./publish
          mv ./publish/*.apk ./publish/App.apk 

      - name: Upload Android Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Android-APK
          path: ./publish/App.apk

  deploy-android:
    name: Deploy to Google Play
    runs-on: ubuntu-latest
    needs: build-android
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Download Android APK
        uses: actions/download-artifact@v3
        with:
          name: Android-APK
          path: ./publish

      - name: Authenticate with Google Cloud using Workload Identity Federation
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: projects/${{ secrets.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ secrets.WORKLOAD_IDENTITY_POOL }}/providers/${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Debug - Verify Authentication
        run: |
          echo "üîç Listing Google Cloud authenticated identities..."
          gcloud auth list
          echo "üîç Checking available projects..."
          gcloud projects list

      - name: Deploy to Google Play Store (Beta)
        uses: r0adkll/upload-google-play@v1
        with:
          packageName: "com.icarda.feedapp"
          releaseFiles: "./publish/App.apk"
          track: beta
          status: completed

      - name: Debug - Check Google Cloud Logs
        run: |
          echo "üîç Fetching Workload Identity Pool logs..."
          gcloud logging read "resource.type=identity_pool"

  notify-team:
    name: Notify Team
    runs-on: ubuntu-latest
    needs: deploy-android

    steps:
      - name: Send Teams Notification
        run: |
          curl -H "Content-Type: application/json" \
            -d '{"text": "üöÄ New MAUI App build deployed to Google Play! üéâ"}' \
            -X POST "https://outlook.office.com/webhook/YOUR_WEBHOOK_URL"
