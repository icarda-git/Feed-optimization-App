// <auto-generated />
using System;
using FeedOptimizationApp.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FeedOptimizationApp.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250108023505_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.11");

            modelBuilder.Entity("FeedOptimizationApp.Data.Models.Calculation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ADG")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BodyWeight")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("DietQualityEstimate")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int?>("FatContent")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Gestation")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Grazing")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int?>("MilkYield")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SpeciesId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Calculations");
                });

            modelBuilder.Entity("FeedOptimizationApp.Data.Models.CalculationHasFeed", b =>
                {
                    b.Property<int>("CPDM")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("CalculationId")
                        .HasColumnType("TEXT");

                    b.Property<int>("DM")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("FeedId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Intake")
                        .HasColumnType("TEXT");

                    b.Property<int>("MEMJKGDM")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("MaxLimit")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("MinLimit")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.ToTable("CalculationHasFeeds");
                });

            modelBuilder.Entity("FeedOptimizationApp.Data.Models.CalculationHasResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CalculationId")
                        .HasColumnType("TEXT");

                    b.Property<int>("GFresh")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PercentDryMatter")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PercentFresh")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TotalRation")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CalculationHasResults");
                });

            modelBuilder.Entity("FeedOptimizationApp.Data.Models.CountryTranslation", b =>
                {
                    b.Property<Guid>("CountryId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.Property<string>("TranslatedDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.ToTable("CountryTranslations");
                });

            modelBuilder.Entity("FeedOptimizationApp.Data.Models.Feed", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("CPPercentage")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DCPPercentage")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DryMatterPercentage")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MEMJKg")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MEMcalKg")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TDNPercentage")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Feeds");
                });

            modelBuilder.Entity("FeedOptimizationApp.Data.Models.FeedTranslation", b =>
                {
                    b.Property<Guid>("FeedId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.Property<string>("TranslatedDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.ToTable("FeedTranslations");
                });

            modelBuilder.Entity("FeedOptimizationApp.Data.Models.Label", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("LabelKey")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Labels");
                });

            modelBuilder.Entity("FeedOptimizationApp.Data.Models.LabelTranslation", b =>
                {
                    b.Property<int>("LabelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.Property<string>("TranslatedText")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("TranslationId")
                        .HasColumnType("INTEGER");

                    b.ToTable("LabelTranslations");
                });

            modelBuilder.Entity("FeedOptimizationApp.Data.Models.LanguageTranslation", b =>
                {
                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("TEXT");

                    b.Property<string>("TranslatedDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.ToTable("LanguageTranslations");
                });

            modelBuilder.Entity("FeedOptimizationApp.Data.Models.RefCountry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CurrencyValue")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DateFormat")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RefCountries");
                });

            modelBuilder.Entity("FeedOptimizationApp.Data.Models.RefLanguage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RefLanguages");
                });

            modelBuilder.Entity("FeedOptimizationApp.Data.Models.RefSpecies", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RefSpeciesList");
                });

            modelBuilder.Entity("FeedOptimizationApp.Data.Models.SpeciesTranslation", b =>
                {
                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SpeciesId")
                        .HasColumnType("TEXT");

                    b.Property<string>("TranslatedDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.ToTable("SpeciesTranslations");
                });

            modelBuilder.Entity("FeedOptimizationApp.Data.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RefCountryId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RefLanguageId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RefSpeciesId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TermsAndConditions")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
